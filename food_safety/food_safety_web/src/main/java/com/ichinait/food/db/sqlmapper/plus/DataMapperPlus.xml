<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ichinait.food.db.mapper.plus.DataMapperPlus" >
  <resultMap id="BaseResultMap" type="com.ichinait.food.db.entity.Datas" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="instrument_id" property="instrumentId" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="ct" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ut" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ichinait.food.db.entity.Datas" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, instrument_id, project_id, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  
  
  <select id="selectDataByConditions" resultType="com.ichinait.food.db.entity.plus.DataPlus">
      select d.id as id,
      p.name projectName,
      i.name as instrumentName,
      s.code as sampleName,
      ifnull(d.resolution,'') as resolution,
      ifnull(d.wavelength_range,'') as wavelengthRange,
      ifnull(d.scanning_times,'') as scanningTimes,
      ifnull(d.scanning_duration,'') as scanningDuration,
      u.user_name uploader,
      d.ct createTime,
      d.attachment_id as attachmentId,
      a.file_original_name as fileName
      from t_datas d
      join t_attachment a on a.id = d.attachment_id
      join t_project p on p.id = d.project_id
      join t_instrument i on i.id = d.instrument_id
      join t_sample s on s.id = d.sample_id
      join t_user u on u.id = a.uploader
  	<where>
  		<if test="projectName != null and projectName != ''">
  			and p.name like concat('%',#{projectName},'%')
  		</if>
  		<if test="instrumentId!= null and instrumentId != ''">
  			and i.id = #{instrumentId}
  		</if>
  		<if test="samplesId != null and samplesId != ''">
  			and s.id = #{samplesId}
  		</if>
  	</where>
  	order by d.ct desc
  </select>

    <select id="selectDatasPlusByIds" resultType="com.ichinait.food.db.entity.plus.DataPlus">
        select d.id as id,
        p.name projectName,
        i.name as instrumentName,
        i.x,
        i.y,
        concat(s.name,'-',s.code) as sampleName,
        u.user_name uploader,
        d.ct createTime,
        a.file_original_name as fileName
  	from t_datas d
    join t_attachment a on a.id = d.attachment_id
  	join t_project p on p.id = d.project_id
  	join t_instrument i on i.id = d.instrument_id
  	join t_sample s on s.id = d.sample_id
  	join t_user u on u.id = a.uploader
  	<where>
        <foreach collection="list" item="id" open="(" close=")" separator="or">
            d.id = #{id}
        </foreach>

    </where>
   order by d.ct desc
    </select>

    <select id="selectDatasByIds" resultType="com.ichinait.food.db.entity.Datas">
        select id,
        project_id as projectId,
        data from t_datas
        <where>
            <foreach collection="list" item="id" open="(" close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>


<select id="selectExcelDatasByProjectId" resultType="com.ichinait.food.db.entity.plus.ExcelDatas">
    SELECT
        d. DATA,
        s.`name` AS sampleName,
        s.`code` AS sampleCode,
        s.manufactor AS sampleManufactor,
        s.producing_area AS sampleProducingArea,
        s.production_date AS sampleProductionDate,
        s.batches AS sampleBatches,
        i.`name` AS instrumentName,
        i.sn AS instrumentSN,
        IF(i.category=1, '平台设备', '辅助设备') AS instrumentCategory,
        i.type AS instrumentType,
        i.model AS instrumentModel,
        i.manufactor AS instrumentManufactor
    FROM
        t_datas d
    JOIN t_sample s ON s.id = d.sample_id
    JOIN t_instrument i ON i.id = d.instrument_id
    WHERE
        d.project_id = #{projectId}
</select>
</mapper>