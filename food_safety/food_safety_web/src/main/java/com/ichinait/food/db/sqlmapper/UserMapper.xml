<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ichinait.food.db.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.ichinait.food.db.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="tutor" jdbcType="VARCHAR" property="tutor" />
    <result column="graduated_school" jdbcType="VARCHAR" property="graduatedSchool" />
    <result column="research_direction" jdbcType="VARCHAR" property="researchDirection" />
    <result column="stu_code" jdbcType="VARCHAR" property="stuCode" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="ct" jdbcType="TIMESTAMP" property="ct" />
    <result column="ut" jdbcType="TIMESTAMP" property="ut" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_account, password, user_name, birthday, tutor, graduated_school, research_direction, 
    stu_code, contact, status, ct, ut
  </sql>
  <select id="selectByExample" parameterType="com.ichinait.food.db.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ichinait.food.db.entity.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ichinait.food.db.entity.User">
    insert into t_user (id, login_account, password, 
      user_name, birthday, tutor, 
      graduated_school, research_direction, stu_code, 
      contact, status, ct, 
      ut)
    values (#{id,jdbcType=VARCHAR}, #{loginAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{tutor,jdbcType=VARCHAR}, 
      #{graduatedSchool,jdbcType=VARCHAR}, #{researchDirection,jdbcType=VARCHAR}, #{stuCode,jdbcType=VARCHAR}, 
      #{contact,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{ct,jdbcType=TIMESTAMP}, 
      #{ut,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ichinait.food.db.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginAccount != null">
        login_account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="tutor != null">
        tutor,
      </if>
      <if test="graduatedSchool != null">
        graduated_school,
      </if>
      <if test="researchDirection != null">
        research_direction,
      </if>
      <if test="stuCode != null">
        stu_code,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ct != null">
        ct,
      </if>
      <if test="ut != null">
        ut,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="tutor != null">
        #{tutor,jdbcType=VARCHAR},
      </if>
      <if test="graduatedSchool != null">
        #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="researchDirection != null">
        #{researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="stuCode != null">
        #{stuCode,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="ct != null">
        #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="ut != null">
        #{ut,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ichinait.food.db.entity.UserExample" resultType="java.lang.Integer">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAccount != null">
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.tutor != null">
        tutor = #{record.tutor,jdbcType=VARCHAR},
      </if>
      <if test="record.graduatedSchool != null">
        graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.researchDirection != null">
        research_direction = #{record.researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="record.stuCode != null">
        stu_code = #{record.stuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.ct != null">
        ct = #{record.ct,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ut != null">
        ut = #{record.ut,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=VARCHAR},
      login_account = #{record.loginAccount,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      tutor = #{record.tutor,jdbcType=VARCHAR},
      graduated_school = #{record.graduatedSchool,jdbcType=VARCHAR},
      research_direction = #{record.researchDirection,jdbcType=VARCHAR},
      stu_code = #{record.stuCode,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      ct = #{record.ct,jdbcType=TIMESTAMP},
      ut = #{record.ut,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichinait.food.db.entity.User">
    update t_user
    <set>
      <if test="loginAccount != null">
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="tutor != null">
        tutor = #{tutor,jdbcType=VARCHAR},
      </if>
      <if test="graduatedSchool != null">
        graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      </if>
      <if test="researchDirection != null">
        research_direction = #{researchDirection,jdbcType=VARCHAR},
      </if>
      <if test="stuCode != null">
        stu_code = #{stuCode,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ct != null">
        ct = #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="ut != null">
        ut = #{ut,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ichinait.food.db.entity.User">
    update t_user
    set login_account = #{loginAccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      tutor = #{tutor,jdbcType=VARCHAR},
      graduated_school = #{graduatedSchool,jdbcType=VARCHAR},
      research_direction = #{researchDirection,jdbcType=VARCHAR},
      stu_code = #{stuCode,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      ct = #{ct,jdbcType=TIMESTAMP},
      ut = #{ut,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>