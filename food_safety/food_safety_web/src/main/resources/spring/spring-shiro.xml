<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		"
	default-lazy-init="true">


	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm -->
	<bean id="myRealm" class="com.ichinait.food.shiro.MyRealm"/>


	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<property name="unauthorizedUrl" value="/login.jsp" />
		<property name="filters">
			<map>
				<entry key="authc">
					<bean class="com.ichinait.food.shiro.SessionFilter"></bean>
				</entry>
				<entry key="roles" >
				<bean class="com.ichinait.food.shiro.SessionFilter"></bean>
				</entry>
			</map>
		</property>
		
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做-->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<!-- roles[admin,manager]这样的形式是and的关系，必须同时是admin和manager才能访问-->
		<property name="filterChainDefinitions">

			<value>
				<!-- some example chain definitions: -->
				/js/** = anon
				/css/** = anon
				/common/** = anon
				/AdminLTE/**=anon
				/fonts/** = anon
				/500.jsp = anon
				/404.jsp = anon
				/login.jsp = anon
				/reg=anon
				/validateAccount=anon
				<!--
				/user/** =authc,roles[admin,manager]
				/data/** = authc,roles[admin,manager,checker]
				/project/** = authc,roles[admin,manager,checker]
				/instrument/** = authc,roles[admin,manager,checker]
				/sample/** = authc,roles[admin,manager,checker]
				/algorithm/** = authc,roles[admin,manager,checker]
				/analysis/** = authc,roles[admin,manager,checker]
				/standards/** = authc,roles[admin,manager,checker]
				-->
				<!-- /system/** = anon
				/admin/** = authc, roles[admin]

				/docs/** = authc,perms[document:read] -->

				<!-- /** = authc -->
				<!--/project/** = authc,perms["projectManage"]-->
				/=authc
				/index=authc
				/project/** = authc,perms["projectManage"]
				/data/** = perms["dataManage"]
				/analysis/** = perms["analysisManage"]
				/report/** = perms["reportManage"]
				/algorithm/** = perms["algorithmManage"]
				/sample/** = perms["sampleManage"]
				/instrument/** = perms["instrumentManage"]
				/standards/** = perms["standardsManage"]
				/firstType/** = perms["sampleTypeLv1Manage"]
				/type/** = perms["sampleTypeLv2Manage"]
				/serviceType/** = perms["serviceTypeManage"]
				/user/** =perms["userManage"]
				/roleManage/** = perms["roleManage"]
				/instrumentServiceRecord/**=perms["instrumentManage"]
			</value>

		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>  
	<!-- 会话DAO -->  
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
	    <!--property name="activeSessionsCacheName" value="shiro-activeSessionCache"/-->
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean> 
	<!-- 会话验证调度器 -->  
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
	    <property name="sessionValidationInterval" value="1800000"/>
	    <property name="sessionManager" ref="sessionManager"/>
	</bean>
	<!-- 会话管理器 -->  
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="globalSessionTimeout" value="3600000"/>
	    <property name="deleteInvalidSessions" value="true"/>  
	    <property name="sessionValidationSchedulerEnabled" value="true"/>
	   	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	    <property name="sessionDAO" ref="sessionDAO"/>  
	</bean>  
	
</beans>